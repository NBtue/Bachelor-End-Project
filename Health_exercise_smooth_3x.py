# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.169885, [3, -0.4, 0], [3, 0.8, 0]], [-0.169885, [3, -0.8, 0], [3, 0.8, 0]], [-0.169885, [3, -0.8, 0], [3, 0.8, 0]], [-0.169885, [3, -0.8, 0], [3, 0.8, 0]], [-0.169885, [3, -0.8, 0], [3, 0.8, 0]], [-0.169885, [3, -0.8, 0], [3, 0.8, 0]], [-0.169885, [3, -0.8, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.00391111, [3, -0.4, 0], [3, 0.8, 0]], [-0.00391111, [3, -0.8, 0], [3, 0.8, 0]], [-0.00391111, [3, -0.8, 0], [3, 0.8, 0]], [-0.00391111, [3, -0.8, 0], [3, 0.8, 0]], [-0.00391111, [3, -0.8, 0], [3, 0.8, 0]], [-0.00391111, [3, -0.8, 0], [3, 0.8, 0]], [-0.00391111, [3, -0.8, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[0.0804356, [3, -0.4, 0], [3, 0.8, 0]], [0.0804356, [3, -0.8, 0], [3, 0.8, 0]], [0.0804356, [3, -0.8, 0], [3, 0.8, 0]], [0.0804356, [3, -0.8, 0], [3, 0.8, 0]], [0.0804356, [3, -0.8, 0], [3, 0.8, 0]], [0.0804356, [3, -0.8, 0], [3, 0.8, 0]], [0.0804356, [3, -0.8, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.124581, [3, -0.4, 0], [3, 0.8, 0]], [-0.124581, [3, -0.8, 0], [3, 0.8, 0]], [-0.124581, [3, -0.8, 0], [3, 0.8, 0]], [-0.124581, [3, -0.8, 0], [3, 0.8, 0]], [-0.124581, [3, -0.8, 0], [3, 0.8, 0]], [-0.124581, [3, -0.8, 0], [3, 0.8, 0]], [-0.124581, [3, -0.8, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[-1.19381, [3, -0.133333, 0], [3, 0.266667, 0]], [-1.54156, [3, -0.266667, 0], [3, 0.4, 0]], [-1.54113, [3, -0.4, -0.000436226], [3, 0.4, 0.000436226]], [-0.0349066, [3, -0.4, 0], [3, 0.4, 0]], [-1.54113, [3, -0.4, 0.000436226], [3, 0.4, -0.000436226]], [-1.54156, [3, -0.4, 0], [3, 0.4, 0]], [-1.54113, [3, -0.4, -0.000436226], [3, 0.4, 0.000436226]], [-0.0349066, [3, -0.4, 0], [3, 0.4, 0]], [-1.54113, [3, -0.4, 0.000436226], [3, 0.4, -0.000436226]], [-1.54156, [3, -0.4, 0], [3, 0.4, 0]], [-1.54113, [3, -0.4, -0.000436226], [3, 0.4, 0.000436226]], [-0.0349066, [3, -0.4, 0], [3, 0.4, 0]], [-1.54113, [3, -0.4, 0.000436226], [3, 0.4, -0.000436226]], [-1.54156, [3, -0.4, 0], [3, 0.266667, 0]], [-1.19381, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[-1.12574, [3, -0.133333, 0], [3, 0.266667, 0]], [-2.08394, [3, -0.266667, 0], [3, 0.4, 0]], [-1.5708, [3, -0.4, 0], [3, 0.4, 0]], [-1.71042, [3, -0.4, 0], [3, 0.4, 0]], [-1.5708, [3, -0.4, 0], [3, 0.4, 0]], [-2.08394, [3, -0.4, 0], [3, 0.4, 0]], [-1.5708, [3, -0.4, 0], [3, 0.4, 0]], [-1.71042, [3, -0.4, 0], [3, 0.4, 0]], [-1.5708, [3, -0.4, 0], [3, 0.4, 0]], [-2.08394, [3, -0.4, 0], [3, 0.4, 0]], [-1.5708, [3, -0.4, 0], [3, 0.4, 0]], [-1.71042, [3, -0.4, 0], [3, 0.4, 0]], [-1.5708, [3, -0.4, 0], [3, 0.4, 0]], [-2.08394, [3, -0.4, 0], [3, 0.266667, 0]], [-1.12574, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[0.89, [3, -0.133333, 0], [3, 0.266667, 0]], [0.2928, [3, -0.266667, 0.0285333], [3, 0.4, -0.0428]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [1, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [0.2928, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [1, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [0.2928, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [1, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [0.2928, [3, -0.4, -0.0428], [3, 0.266667, 0.0285333]], [0.89, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[0.123819, [3, -0.4, 0], [3, 0.8, 0]], [0.123819, [3, -0.8, 0], [3, 0.8, 0]], [0.123819, [3, -0.8, 0], [3, 0.8, 0]], [0.123819, [3, -0.8, 0], [3, 0.8, 0]], [0.123819, [3, -0.8, 0], [3, 0.8, 0]], [0.123819, [3, -0.8, 0], [3, 0.8, 0]], [0.123819, [3, -0.8, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[0.0960774, [3, -0.4, 0], [3, 0.8, 0]], [0.0960774, [3, -0.8, 0], [3, 0.8, 0]], [0.0960774, [3, -0.8, 0], [3, 0.8, 0]], [0.0960774, [3, -0.8, 0], [3, 0.8, 0]], [0.0960774, [3, -0.8, 0], [3, 0.8, 0]], [0.0960774, [3, -0.8, 0], [3, 0.8, 0]], [0.0960774, [3, -0.8, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.179118, [3, -0.4, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.0889399, [3, -0.4, 0], [3, 0.8, 0]], [-0.0889399, [3, -0.8, 0], [3, 0.8, 0]], [-0.0889399, [3, -0.8, 0], [3, 0.8, 0]], [-0.0889399, [3, -0.8, 0], [3, 0.8, 0]], [-0.0889399, [3, -0.8, 0], [3, 0.8, 0]], [-0.0889399, [3, -0.8, 0], [3, 0.8, 0]], [-0.0889399, [3, -0.8, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6])
keys.append([[1.51866, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, 0.500365], [3, 0.4, -0.500365]], [-1.48353, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, -0.500365], [3, 0.4, 0.500365]], [1.51866, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, 0.500365], [3, 0.4, -0.500365]], [-1.48353, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, -0.500365], [3, 0.4, 0.500365]], [1.51866, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, 0.500365], [3, 0.4, -0.500365]], [-1.48353, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, -0.500365], [3, 0.4, 0.500365]], [1.51866, [3, -0.4, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[-0.115192, [3, -0.133333, 0], [3, 0.266667, 0]], [0.137858, [3, -0.266667, -0.192219], [3, 0.4, 0.288328]], [1.32645, [3, -0.4, 0], [3, 0.4, 0]], [0.137858, [3, -0.4, 0], [3, 0.4, 0]], [1.32645, [3, -0.4, 0], [3, 0.4, 0]], [0.137858, [3, -0.4, 0], [3, 0.4, 0]], [1.32645, [3, -0.4, 0], [3, 0.4, 0]], [0.137858, [3, -0.4, 0], [3, 0.4, 0]], [1.32645, [3, -0.4, 0], [3, 0.4, 0]], [0.137858, [3, -0.4, 0], [3, 0.4, 0]], [1.32645, [3, -0.4, 0], [3, 0.4, 0]], [0.137858, [3, -0.4, 0], [3, 0.4, 0]], [1.32645, [3, -0.4, 0], [3, 0.4, 0]], [0.137858, [3, -0.4, 0.288328], [3, 0.266667, -0.192219]], [-0.115192, [3, -0.266667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[1.24093, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.872665, [3, -0.266667, 0.232711], [3, 0.4, -0.349066]], [-1.22173, [3, -0.4, 0], [3, 0.4, 0]], [0.0966277, [3, -0.4, 0], [3, 0.4, 0]], [-1.22173, [3, -0.4, 0], [3, 0.4, 0]], [-0.872665, [3, -0.4, 0], [3, 0.4, 0]], [-1.22173, [3, -0.4, 0], [3, 0.4, 0]], [0.0966277, [3, -0.4, 0], [3, 0.4, 0]], [-1.22173, [3, -0.4, 0], [3, 0.4, 0]], [-0.872665, [3, -0.4, 0], [3, 0.4, 0]], [-1.22173, [3, -0.4, 0], [3, 0.4, 0]], [0.0966277, [3, -0.4, 0], [3, 0.4, 0]], [-1.22173, [3, -0.4, 0], [3, 0.4, 0]], [-0.872665, [3, -0.4, -0.349066], [3, 0.266667, 0.232711]], [1.24093, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[0.0825586, [3, -0.4, 0], [3, 0.8, 0]], [0.0825586, [3, -0.8, 0], [3, 0.8, 0]], [0.0825586, [3, -0.8, 0], [3, 0.8, 0]], [0.0825586, [3, -0.8, 0], [3, 0.8, 0]], [0.0825586, [3, -0.8, 0], [3, 0.8, 0]], [0.0825586, [3, -0.8, 0], [3, 0.8, 0]], [0.0825586, [3, -0.8, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[0.123141, [3, -0.4, 0], [3, 0.8, 0]], [0.123141, [3, -0.8, 0], [3, 0.8, 0]], [0.123141, [3, -0.8, 0], [3, 0.8, 0]], [0.123141, [3, -0.8, 0], [3, 0.8, 0]], [0.123141, [3, -0.8, 0], [3, 0.8, 0]], [0.123141, [3, -0.8, 0], [3, 0.8, 0]], [0.123141, [3, -0.8, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[1.19381, [3, -0.133333, 0], [3, 0.266667, 0]], [1.54368, [3, -0.266667, -0.000621315], [3, 0.4, 0.000931973]], [1.54462, [3, -0.4, 0], [3, 0.4, 0]], [0.0349066, [3, -0.4, 0], [3, 0.4, 0]], [1.54462, [3, -0.4, 0], [3, 0.4, 0]], [1.54368, [3, -0.4, 0], [3, 0.4, 0]], [1.54462, [3, -0.4, 0], [3, 0.4, 0]], [0.0349066, [3, -0.4, 0], [3, 0.4, 0]], [1.54462, [3, -0.4, 0], [3, 0.4, 0]], [1.54368, [3, -0.4, 0], [3, 0.4, 0]], [1.54462, [3, -0.4, 0], [3, 0.4, 0]], [0.0349066, [3, -0.4, 0], [3, 0.4, 0]], [1.54462, [3, -0.4, 0], [3, 0.4, 0]], [1.54368, [3, -0.4, 0.000931973], [3, 0.266667, -0.000621315]], [1.19381, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[1.12574, [3, -0.133333, 0], [3, 0.266667, 0]], [2.07823, [3, -0.266667, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [2.07823, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [2.07823, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [1.5708, [3, -0.4, 0], [3, 0.4, 0]], [2.07823, [3, -0.4, 0], [3, 0.266667, 0]], [1.12574, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[0.89, [3, -0.133333, 0], [3, 0.266667, 0]], [0.307156, [3, -0.266667, 0.038104], [3, 0.4, -0.057156]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [1, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [0.307156, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [1, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [0.307156, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [1, [3, -0.4, 0], [3, 0.4, 0]], [0.25, [3, -0.4, 0], [3, 0.4, 0]], [0.307156, [3, -0.4, -0.057156], [3, 0.266667, 0.038104]], [0.89, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[0.124337, [3, -0.4, 0], [3, 0.8, 0]], [0.124337, [3, -0.8, 0], [3, 0.8, 0]], [0.124337, [3, -0.8, 0], [3, 0.8, 0]], [0.124337, [3, -0.8, 0], [3, 0.8, 0]], [0.124337, [3, -0.8, 0], [3, 0.8, 0]], [0.124337, [3, -0.8, 0], [3, 0.8, 0]], [0.124337, [3, -0.8, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.0975424, [3, -0.4, 0], [3, 0.8, 0]], [-0.0975424, [3, -0.8, 0], [3, 0.8, 0]], [-0.0975424, [3, -0.8, 0], [3, 0.8, 0]], [-0.0975424, [3, -0.8, 0], [3, 0.8, 0]], [-0.0975424, [3, -0.8, 0], [3, 0.8, 0]], [-0.0975424, [3, -0.8, 0], [3, 0.8, 0]], [-0.0975424, [3, -0.8, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.179118, [3, -0.4, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0.8, 0]], [-0.179118, [3, -0.8, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([1.2, 3.6, 6, 8.4, 10.8, 13.2, 15.6])
keys.append([[-0.0891821, [3, -0.4, 0], [3, 0.8, 0]], [-0.0891821, [3, -0.8, 0], [3, 0.8, 0]], [-0.0891821, [3, -0.8, 0], [3, 0.8, 0]], [-0.0891821, [3, -0.8, 0], [3, 0.8, 0]], [-0.0891821, [3, -0.8, 0], [3, 0.8, 0]], [-0.0891821, [3, -0.8, 0], [3, 0.8, 0]], [-0.0891821, [3, -0.8, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6])
keys.append([[1.52643, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, 0.50166], [3, 0.4, -0.50166]], [-1.48353, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, -0.50166], [3, 0.4, 0.50166]], [1.52643, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, 0.50166], [3, 0.4, -0.50166]], [-1.48353, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, -0.50166], [3, 0.4, 0.50166]], [1.52643, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, 0.50166], [3, 0.4, -0.50166]], [-1.48353, [3, -0.4, 0], [3, 0.4, 0]], [0, [3, -0.4, -0.50166], [3, 0.4, 0.50166]], [1.52643, [3, -0.4, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[0.115192, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.132225, [3, -0.266667, 0.192219], [3, 0.4, -0.288328]], [-1.32645, [3, -0.4, 0], [3, 0.4, 0]], [-0.132225, [3, -0.4, 0], [3, 0.4, 0]], [-1.32645, [3, -0.4, 0], [3, 0.4, 0]], [-0.132225, [3, -0.4, 0], [3, 0.4, 0]], [-1.32645, [3, -0.4, 0], [3, 0.4, 0]], [-0.132225, [3, -0.4, 0], [3, 0.4, 0]], [-1.32645, [3, -0.4, 0], [3, 0.4, 0]], [-0.132225, [3, -0.4, 0], [3, 0.4, 0]], [-1.32645, [3, -0.4, 0], [3, 0.4, 0]], [-0.132225, [3, -0.4, 0], [3, 0.4, 0]], [-1.32645, [3, -0.4, 0], [3, 0.4, 0]], [-0.132225, [3, -0.4, -0.288328], [3, 0.266667, 0.192219]], [0.115192, [3, -0.266667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.4, 1.2, 2.4, 3.6, 4.8, 6, 7.2, 8.4, 9.6, 10.8, 12, 13.2, 14.4, 15.6, 16.4])
keys.append([[-1.24093, [3, -0.133333, 0], [3, 0.266667, 0]], [0.876155, [3, -0.266667, -0.218748], [3, 0.4, 0.328122]], [1.20428, [3, -0.4, 0], [3, 0.4, 0]], [0.102456, [3, -0.4, 0], [3, 0.4, 0]], [1.20428, [3, -0.4, 0], [3, 0.4, 0]], [0.876155, [3, -0.4, 0], [3, 0.4, 0]], [1.20428, [3, -0.4, 0], [3, 0.4, 0]], [0.102456, [3, -0.4, 0], [3, 0.4, 0]], [1.20428, [3, -0.4, 0], [3, 0.4, 0]], [0.876155, [3, -0.4, 0], [3, 0.4, 0]], [1.20428, [3, -0.4, 0], [3, 0.4, 0]], [0.102456, [3, -0.4, 0], [3, 0.4, 0]], [1.20428, [3, -0.4, 0], [3, 0.4, 0]], [0.876155, [3, -0.4, 0.328122], [3, 0.266667, -0.218748]], [-1.24093, [3, -0.266667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
